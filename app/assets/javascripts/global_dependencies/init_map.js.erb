var loaded_markers = [];
var markers = [];
var circles = [];

$(document).on('turbolinks:load', function() {
  if ($("#bilbomap").length > 0){
    var infowindow = null;
    google.maps.event.addDomListener(window, 'turbolinks:load', initializeMap);

    // just in case map doesn't load initially, retry until it does
    var map_load_interval = setInterval(function(){
      //console.log("attempting to load map");
      if (typeof google === 'object' && typeof google.maps === 'object') {
        //console.log("map has loaded so im not retrying anymore");
        clearInterval(map_load_interval);
      } else {
        initializeMap();
      }
    }, 1500)
  }
});

function close_infowindow(){
  if (infowindow) {
     infowindow.close();
   }
}

// Locate map on user geolocation
function getUserLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        const pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        };
        infowindow.setPosition(pos);
        infowindow.open(window.bilbomap);
        // move to the user location
        window.bilbomap.setCenter(pos);
      },
      () => {
        handleLocationError(true, infowindow, window.bilbomap.getCenter());
      }
    );
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infowindow, window.bilbomap.getCenter());
  }
}

function handleLocationError(browserHasGeolocation, infowindow, pos) {
  infowindow.setPosition(pos);
  infowindow.setContent(
    browserHasGeolocation
      ? "Error: The Geolocation service failed."
      : "Error: Your browser doesn't support geolocation."
  );
  infowindow.open(map);
}

function initializeMap() {
  waitForElement("#bilbomap", function() {
    // reset value before map is loaded the first time
    // this is due to how turbolinks works
    // loaded_markers is used as a quick reference to load or not a new marker object into the map
    window.loaded_markers = [];
    // markers variable is used so google maps objects are saved there
    window.markers = [];
    // circles variable is used to store created circles
    window.circles= [];
    // default to center of Mexico
    var mapLat = parseFloat($("#mapLat").val()) || parseFloat($.getUrlVar("lat")) || 19.4324451
    var mapLng = parseFloat($("#mapLng").val()) || parseFloat($.getUrlVar("lng")) || -99.1333817

    // center of mexico
    var center = new google.maps.LatLng(mapLat, mapLng);
    var zoom = parseInt($("#mapZoom").val()) || parseInt($.getUrlVar("zoom")) || 12

    window.bilbomap = new google.maps.Map(document.getElementById('bilbomap'), {
      zoom: zoom,
      center: center,
      minZoom: 11,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      styles: [{"featureType":"all","elementType":"labels.text.fill","stylers":[{"color":"#7c93a3"},{"lightness":"-10"}]},{"featureType":"administrative.country","elementType":"geometry","stylers":[{"visibility":"on"}]},{"featureType":"administrative.country","elementType":"geometry.stroke","stylers":[{"color":"#a0a4a5"}]},{"featureType":"administrative.province","elementType":"geometry.stroke","stylers":[{"color":"#62838e"}]},{"featureType":"landscape","elementType":"geometry.fill","stylers":[{"color":"#dde3e3"}]},{"featureType":"landscape.man_made","elementType":"geometry.stroke","stylers":[{"color":"#3f4a51"},{"weight":"0.30"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"poi.attraction","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.business","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.government","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.park","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.place_of_worship","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.school","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi.sports_complex","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":"-100"},{"visibility":"on"}]},{"featureType":"road","elementType":"geometry.stroke","stylers":[{"visibility":"on"}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#bbcacf"}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"lightness":"0"},{"color":"#bbcacf"},{"weight":"0.50"}]},{"featureType":"road.highway","elementType":"labels","stylers":[{"visibility":"on"}]},{"featureType":"road.highway","elementType":"labels.text","stylers":[{"visibility":"on"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.fill","stylers":[{"color":"#ffffff"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.stroke","stylers":[{"color":"#a9b4b8"}]},{"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"invert_lightness":true},{"saturation":"-7"},{"lightness":"3"},{"gamma":"1.80"},{"weight":"0.01"}]},{"featureType":"transit.line","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"geometry.fill","stylers":[{"color":"#a3c7df"}]},{ "featureType": "road.arterial", "elementType": "labels", "stylers": [ { "visibility": "off" } ] }],
      disableDefaultUI: true,
      zoomControl: true,
    });

    infowindow = new google.maps.InfoWindow();

    getUserLocation();

    // commented in case we need to use circles
    // build_circles(bilbos);

    // load bilbos when moved in map
    google.maps.event.addListener(window.bilbomap, 'idle', function() {
      if (window.OpenInMapTriggered == true){
        OpenInMapTriggered = false;
        return 0;
      }
      fetchBoardsFromNewLocation();
    });

    control_close = $("[google-control-close]");
    if (control_close.length > 0) window.bilbomap.controls[google.maps.ControlPosition.TOP_CENTER].push(control_close[0]);

    /*
    Useful for debugging and creating circles in the map
    */
    // google.maps.event.addListener(window.bilbomap, 'bounds_changed', function() {
    //   delete_all_circles();
    //   draw_map_bounds_circle();
    // });
  });
}

function delete_all_circles() {
  if (typeof window.circles !== 'undefined') {
    for (var i = 0; i < window.circles.length; i++) {
      window.circles[i].setMap(null);
    }
  }
}

function draw_map_bounds_circle() {
  var bounds = window.bilbomap.getBounds();
  var ne_bounds = bounds.getNorthEast();
  var circle_center = bounds.getCenter();
  var circle_radius = google.maps.geometry.spherical.computeDistanceBetween(circle_center, ne_bounds);

  const newCircle = new google.maps.Circle({
    strokeColor: "#7CA0C0",
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: "#7CA0C0",
    fillOpacity: 0.35,
    map: window.bilbomap,
    center: circle_center,
    radius: circle_radius
  });
  // Store circle object to array
  window.circles.push(newCircle)
}

function build_markers(bilbos) {
  // current max zindex for markers
  var markersCurrentZIndex = 100
  var previousMarker
  var markersNotSmart = []

  // build markers from the available bilbos
  // push new markers to markers global variable
  window.markers.push.apply(window.markers, bilbos.filter(function(bilbo) {
      // check if marker already exists, so we don't duplicate them
      if ( loaded_markers.includes([bilbo["lat"], bilbo["lng"]].toString()) ) {
        // set marker to visible since it already existed
        for (var i = 0; i < window.markers.length; i++) {
          var position = new google.maps.LatLng(bilbo["lat"], bilbo["lng"]);
          if (window.markers[i].getPosition().equals(position)) {
              window.markers[i].setVisible(true);
              break;
          }
        }
        // marker already exists, so skip it
        return false;
      }
      return true;
    }).map(function(bilbo) {
      var marker = new MarkerWithLabel({
        position: { lat: bilbo["lat"], lng: bilbo["lng"] },
        icon: " ",
        labelContent: "<i class='icon-" + bilbo["category"] + " tx-16'></i>" + " $" + bilbo["cycle_price"].toFixed(2).toString(),
        labelAnchor: new google.maps.Point(-10, 0),
        labelClass: "mklabel pd-x-5 " + (bilbo["smart"] == true ? "mklabel_smart" : ""),
        zIndex: markersCurrentZIndex,
        map: window.bilbomap,
        clicked: false,
        visited: false,
        smart: bilbo["smart"]
    });

    // add markers to loaded_markers variable so we can keep track of existing markers
    window.loaded_markers.push([bilbo["lat"], bilbo["lng"]].toString());

    // close infowindow if clicked in another region of map
    google.maps.event.addListener(window.bilbomap, "click", function() {
      if (infowindow) {
         infowindow.close();
       }
       if (marker.clicked) {
        marker['clicked'] = false
        marker.setOptions({labelClass: 'mklabel ' + (marker["smart"] == true ? "mklabel_smart" : "")})
       }
    });

    // Icon in front on hover
    google.maps.event.addListener(marker, 'mouseover', function() {
      if (!marker.clicked) {
        markersCurrentZIndex = markersCurrentZIndex + 1;
        marker.setZIndex(markersCurrentZIndex);
        marker.setOptions({labelClass: 'mklabel mklabel_hover ' + (marker["smart"] == true ? "mklabel_smart" : "")})
      } else {
        markersCurrentZIndex = markersCurrentZIndex + 1;
        marker.setZIndex(markersCurrentZIndex);
      }
    });

    // Remove mklabel_selected class when mouse is out of marker
    google.maps.event.addListener(marker, 'mouseout', function() {
      if (!marker.clicked) {
        marker.setOptions({labelClass: 'mklabel ' + (marker["smart"] == true ? "mklabel_smart" : "")})
      }
    });


    // Fetch Board data and display in map
    google.maps.event.addListener(marker, 'click', function() {
      if (typeof previousMarker !== 'undefined' && previousMarker.clicked) {
        previousMarker['clicked'] = false
        previousMarker.setOptions({labelClass: 'mklabel ' + (previousMarker["smart"] == true ? "mklabel_smart" : "")})
       }
      if ($("#bilbomap").length && $("[filter-and-boards]").length){
        //transition effects
        showBoardInfo();
      }
      // alert('marker ' + marker.getPosition().lat() + ' clicked');
      $.ajax({
         url:  "/boards/get_info",
         dataType: "script",
         data: {lat: marker.getPosition().lat(), lng: marker.getPosition().lng(), selected_boards: $("#campaign_boards").val(), selected_id: window.clickedBoardId},
         success: function(data) {
            if (infowindow) {
               infowindow.close();
             }
            infowindow.setContent(infowindow_content())
            infowindow.open(window.bilbomap, marker);
            // add active class to marker
            previousMarker = marker
            marker['clicked'] = true
            // mark marker as visited - we don't currently use this for anything but could be useful in the future
            marker['visited'] = true
            marker.setOptions({labelClass: 'mklabel ' + (marker["smart"] == true ? "mklabel_smart_selected" : "mklabel_selected")})

          finishedLoadingBoardInfo();
          },
         error: function() {
           alert("Oops! Occurió un error.");
         }
      });
    });

    return marker;
  }));

  // markercluster custom icons
  var markerStyles = [
    {
      textColor: 'white',
      url: 'https://content-bilbo.app.bilbo.mx/statics/maps/markercluster/15-apr-2021/m1.svg',
      height: 53,
      width: 52
    },
    {
      textColor: 'white',
      url: 'https://content-bilbo.app.bilbo.mx/statics/maps/markercluster/15-apr-2021/m2.svg',
      height: 55,
      width: 54
    },
    {
      textColor: 'white',
      url: 'https://content-bilbo.app.bilbo.mx/statics/maps/markercluster/15-apr-2021/m3.svg',
      height: 57,
      width: 56
    },
    {
      textColor: 'white',
      url: 'https://content-bilbo.app.bilbo.mx/statics/maps/markercluster/15-apr-2021/m4.svg',
      height: 59,
      width: 58
    },
    {
      textColor: 'white',
      url: 'https://content-bilbo.app.bilbo.mx/statics/maps/markercluster/15-apr-2021/m5.svg',
      height: 61,
      width: 60
    },
  ]
  // Separate smart from no smart bilbos to use markercluster
  for (var mark in window.markers) {
    if (window.markers[mark]["smart"] == false && window.markers[mark].visible ){
      markersNotSmart.push(window.markers[mark]);
    }
  }
  var options = {
    styles: markerStyles
  };
  window.markerCluster = new MarkerClusterer(window.bilbomap, markersNotSmart, options);
  window.markersLoaded = true;
}

function fetchBoardsFromNewLocation() {
  var bounds = window.bilbomap.getBounds();
  var ne_bounds = bounds.getNorthEast();
  var center = bounds.getCenter();
  var radius = google.maps.geometry.spherical.computeDistanceBetween(center, ne_bounds);

  $("#lat1").val(center.lat());
  $("#lng1").val(center.lng());
  $("#radius").val(radius);
  set_change_in("filter-bilbos");
}

function DeleteMarkers() {
  // if (typeof window.markerCluster !== 'undefined') {
  //   window.markerCluster.clearMarkers();
  // }
  //Loop through all the markers and remove
  if (typeof window.markerCluster !== 'undefined') {
    for (var i = 0; i < window.markers.length; i++) {
      window.markers[i].setMap(null);
      //marker.setVisible(false)
    }
  }
  //window.markers = [];
}

// hides all markers
function hideAllMarkers() {
  if (typeof window.markerCluster !== 'undefined') {
    window.markerCluster.clearMarkers();
  }
  if (typeof window.markers !== 'undefined') {
    for (var i = 0; i < window.markers.length; i++) {
      window.markers[i].setVisible(false);
    }
  }
}
function OpenInMap(element){
  window.OpenInMapTriggered = true;
  var lat = parseFloat(element.getAttribute("lat"));
  var lng = parseFloat(element.getAttribute("lng"));
  $.each( window.markers, function( index, marker ){
    markerLat = parseFloat(marker.position.lat());
    markerLng = parseFloat(marker.position.lng())
    if (markerLat == lat && markerLng == lng){
      window.clickedBoardId = $(element).attr("data-id");
      google.maps.event.trigger(marker, 'click');
      window.clickedBoardId = "";
      return false;
    }
  });
}
function infowindow_content(){
  //just visible board content has d-flex class
  return `
    <div class="card wd-220">
      <img src="${$("[board-info] [role='tabpanel'].d-flex .carousel").find('img:first').attr("src")}" class="card-img-top o-fit-cover ht-120">
      <div class="card-body pd-10-f">
        <h5 class="card-title">${$("[board-info] [role='tabpanel'].d-flex #board_info_name").text()}</h5>
        <p class="card-text d-flex align-items-center justify-content-between tx-gray-500 tx-14 mg-b-5">
        <span>
        <i class="fe fe-eye"></i> ${$("[board-info] [role='tabpanel'].d-flex #board_info_daily_views").text()}
        </span>
        <span>
        <i class="fe fe-target"></i> ${$("[board-info] [role='tabpanel'].d-flex #board_info_classification").text()}
        </span>
        <span>
        <i class="fe fe-expand"></i> ${$("[board-info] [role='tabpanel'].d-flex #board_info_diagonal_inches").text()}
        </span>
        </p>
        <div class="d-flex justify-content-between align-items-center">
          ${ $("#dashboardWizard").length ? '<span class="btn btn-primary mapToggle d-none" id="moreBoardInfo" onclick="mapToggle(false);infowindow.close();">Más información</span>': '<a href="/campaigns?openModal=modalNewCampaign" target="_parent" class="tx-14" style="font-weight: 500">Crear una campaña <i class="fe fe-plus tx-semibold mg-l-10"></i></a>'}
          <small class="tx-gray-500 tx-underline cursor-pointer mg-l-auto" onclick="close_infowindow();">cerrar</a>
        </div>
      </div>
    </div>`
}
