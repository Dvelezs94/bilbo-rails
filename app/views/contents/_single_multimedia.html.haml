.col-sm-12.col-md-4.col-lg-3.pd-b-5.pd-md-l-0.mmcard.mg-t-10{"data-content": content.id, "data-multimedia-type": content.get_format, "data-processed": "#{content.processed?}"}
  .card.card-file
    .card-file-thumb.bg-white
      -if content.is_video?
        - begin
          = link_to content.multimedia_url(:transcoded), class: "glightbox img-inherit", :data => {caption: content.multimedia.metadata["filename"], group: ""} do
            = image_tag content.multimedia_url(:large), class: "img-inherit", :controls => false, :controlslist => "nodownload" , autoplay: false, loop: true, muted: 'muted'
        - rescue
          = image_tag "construction_video.gif", class: "img-inherit"
      -elsif content.is_url?
        = link_to content.url, class: "glightbox img-inherit", :data => {caption: content.url, group: ""} do
          %iframe.no-pointer{:src => "#{content.url}", class: "img-inherit", :scrolling => "no"}
      -else # else is an image
        - begin
          -if content.multimedia(:large).height <= 1080
            = link_to content.multimedia_url(:large), class: "glightbox img-inherit", :data => {caption: content.multimedia.metadata["filename"], group: "", type: "image"} do
              = image_tag content.multimedia_url(:small), class: "img-inherit"
        - rescue
          = image_tag "construction_video.gif", class: "img-inherit"
    .card-body
      - begin
        -if content.is_video? || content.is_image?
          %h6.mmtitle= content.multimedia.metadata["filename"].truncate(30)
        -else
          -if !content.is_url? && content.multimedia(:large).height <= 1080
            %h6.mmtitle= content.multimedia.metadata["filename"].truncate(30)
          -elsif content.is_url?
            %h6.mmtitle{"data-toggle" => "tooltip",:title => content.url}= content.url.truncate(40)
      -rescue
        %h6.mmtitle= content.multimedia.metadata["filename"].truncate(30)

      - begin
        - if !content.url? && content.multimedia(:large).width.nil?
          %span= t("ads.measures")
        -elsif content.url?
          %span= t("content.responsive")
        -else
          %span= "#{content.multimedia(:large).width.round(0)} x #{content.multimedia(:large).height.round(0)}"
      - rescue
        %span= t("ads.processing_continuous")
      -# %div.pd-t-10
      -# %span= I18n.t('ads.transition')
      -# = select_tag "",options_for_select(Ad.transitions.map{|x|  [t("ads.transitions.#{x[0]}"),x[1]]}, content.multimedia.transition) ,onchange: "$.post('#{ad_attachment_path(content.multimedia.record,multimedia)}',{'_method':'put', 'effect': this.value} );", class: 'custom-select'
    .card-footer.pd-t-0
      -if !content.url? && content.processed?
        %span.d-sm-inline
          = t("general_inputs.size")
          \:
        - if content.is_video?
          = number_to_human_size(content.multimedia(:transcoded).size, precision: 2) rescue ""
        - else
          = number_to_human_size(content.multimedia(:large).size, precision: 2) rescue ""
      -elsif !content.processed?
        %span.d-sm-inline
          %i.fe.fe-sync.cursor-pointer{id: "reload_single_content_#{content.id}", onclick: "get_single_content(#{content.id})" }
      = link_to raw("<i class='fe fe-trash fnt-md tx-danger a-right'></i>"), content_path(content), class: "float-right", method: :delete, data: { confirm: t("general_inputs.delete_confirmation") }
/ col
